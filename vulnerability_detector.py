#!/usr/bin/python3
import argparse
from argparse import RawTextHelpFormatter
import pattern
import analyze
from ast_parser import *
from analyzer import *


def main():

    description = 'Vulnerability Detector\n'

    usage = '\n\
    vulnerability_detector <sliceJSON> <patternsJSON>\n'

    parser = argparse.ArgumentParser(prog='vulnerability_detector', description=description,
                                     usage=usage, formatter_class=RawTextHelpFormatter)
    parser.add_argument('sliceJSON', type=str)
    parser.add_argument('patternsJSON', type=str)

    args = parser.parse_args()

    with open(args.patternsJSON, "r") as json_pattern_file:
        pattern_list = pattern.parse(json_pattern_file)

    with open(args.sliceJSON, "r") as json_slice_file:
        ast_parser = AstParser()
        ast_tree = ast_parser.parse(json_slice_file)

        analyzer = Analyzer(pattern_list)
        ast_tree.get_analyzed(analyzer)

        print("\nvar levels: {}\n".format(analyzer.decl_vars))
        print("vulnerabilities basic: {}".format(analyzer.basic_vulnerabilities))
        print("vulnerabilities advanced: {}".format(analyzer.advanced_vulnerabilities))


if __name__ == "__main__":
    main()